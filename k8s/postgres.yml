---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init
  namespace: demo
  labels:
    app: postgres
data:
  uaa.sh: |
    #!/bin/bash
    set -e

    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-SQL
      CREATE USER uaa WITH PASSWORD 'restrain-whee-jealousy-typolog-potable';
      CREATE DATABASE uaa;
      GRANT ALL PRIVILEGES ON DATABASE uaa TO uaa;
    SQL
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres
spec:
  storageClassName: standard
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: demo
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-datastore
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: gateway-demo
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      run: postgres
  template:
    metadata:
      labels:
        run: postgres
        app.kubernetes.io/name: postgres
        app.kubernetes.io/instance: postgres-datastore
        app.kubernetes.io/component: database
        app.kubernetes.io/part-of: gateway-demo
    spec:
      containers:
      - name: postgres
        image: postgres:latest
        ports:
        - containerPort: 5432
        env:
        - name: PGDATA
          value: /data/postgres
        envFrom:
        - secretRef:
            name: postgres-auth
        volumeMounts:
        - name: init
          mountPath: /docker-entrypoint-initdb.d 
        - name: data
          mountPath: /data/postgres
      volumes:
      - name: init 
        configMap: 
          name: postgres-init
      - name: data
        persistentVolumeClaim:
          claimName: postgres
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: demo
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/instance: postgres-datastore
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: gateway-demo
spec:
  ports:
  - port: 5432
    protocol: TCP
    targetPort: 5432
  selector:
    run: postgres
  sessionAffinity: None
  type: ClusterIP
  clusterIP: None
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: postgres-allow-uaa
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: postgres
      app.kubernetes.io/instance: postgres-datastore
      app.kubernetes.io/part-of: gateway-demo
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/name: uaa
          app.kubernetes.io/component: authorization_server
          app.kubernetes.io/part-of: gateway-demo
    ports:
    - protocol: TCP
      port: 5432

