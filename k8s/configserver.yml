---
apiVersion: v1
kind: ConfigMap
metadata:
  name: configserver
  namespace: demo
data:
  SPRING_APPLICATION_JSON: |
    {
      "spring": {
        "profiles": {
          "active": "git"
        },
        "cloud": {
          "config": {
            "server": {
              "git": {
                "uri": "https://github.com/crdant/spring-cloud-gateway-demo",
                "searchPaths": "config/{application}/{profile}"
              }
            }
          }
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: configserver
  namespace: demo
  labels:
    run: configserver
    app.kubernetes.io/name: config-server
    app.kuberbetes.io/instance: config-server-standalone
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: gateway-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      run: configserver
  template:
    metadata:
      labels:
        run: configserver
        app.kubernetes.io/name: config-server
        app.kuberbetes.io/instance: config-server-standalone
        app.kubernetes.io/component: configuration
        app.kubernetes.io/part-of: gateway-demo
    spec:
      containers:
      - image: crdant/configserver
        name: configserver
        envFrom:
          - configMapRef:
              name: configserver
        readinessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  name: config
  namespace: demo
  labels:
    app.kubernetes.io/name: config-server
    app.kuberbetes.io/instance: config-server-standalone
    app.kubernetes.io/component: configuration
    app.kubernetes.io/part-of: gateway-demo
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    run: configserver
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: configserver
  namespace: demo
  labels:
    app.kubernetes.io/name: eureka
    app.kuberbetes.io/instance: eureka-standalone
    app.kubernetes.io/component: discovery
    app.kubernetes.io/part-of: gateway-demo
  annotations:
    nginx.org/ssl-services: "ssl-svc"
    cert-manager.io/cluster-issuer: "letsencrypt"
spec:
  tls:
  - hosts:
    - config.minikube.crdant.io
    secretName: configserver-tls
  rules:
  - host: config.minikube.crdant.io
    http:
      paths:
      - path: /
        backend:
          serviceName: config
          servicePort: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: configserver-allow-access
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: config-server
      app.kuberbetes.io/instance: config-server-standalone
      app.kubernetes.io/part-of: gateway-demo
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: services
          app.kubernetes.io/part-of: gateway-demo
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: gateway
          app.kubernetes.io/part-of: gateway-demo
    ports:
    - protocol: TCP
      port: 8080

